// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.20.3
// source: ride.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRideRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PassengerId     string                 `protobuf:"bytes,1,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	PickupLocation  string                 `protobuf:"bytes,2,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	DropoffLocation string                 `protobuf:"bytes,3,opt,name=dropoff_location,json=dropoffLocation,proto3" json:"dropoff_location,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateRideRequest) Reset() {
	*x = CreateRideRequest{}
	mi := &file_ride_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRideRequest) ProtoMessage() {}

func (x *CreateRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRideRequest.ProtoReflect.Descriptor instead.
func (*CreateRideRequest) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRideRequest) GetPassengerId() string {
	if x != nil {
		return x.PassengerId
	}
	return ""
}

func (x *CreateRideRequest) GetPickupLocation() string {
	if x != nil {
		return x.PickupLocation
	}
	return ""
}

func (x *CreateRideRequest) GetDropoffLocation() string {
	if x != nil {
		return x.DropoffLocation
	}
	return ""
}

type CreateRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRideResponse) Reset() {
	*x = CreateRideResponse{}
	mi := &file_ride_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRideResponse) ProtoMessage() {}

func (x *CreateRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRideResponse.ProtoReflect.Descriptor instead.
func (*CreateRideResponse) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRideResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *CreateRideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RideStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideStatusRequest) Reset() {
	*x = RideStatusRequest{}
	mi := &file_ride_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusRequest) ProtoMessage() {}

func (x *RideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusRequest.ProtoReflect.Descriptor instead.
func (*RideStatusRequest) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{2}
}

func (x *RideStatusRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type RideStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideStatusResponse) Reset() {
	*x = RideStatusResponse{}
	mi := &file_ride_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusResponse) ProtoMessage() {}

func (x *RideStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusResponse.ProtoReflect.Descriptor instead.
func (*RideStatusResponse) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{3}
}

func (x *RideStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AssignDriverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignDriverRequest) Reset() {
	*x = AssignDriverRequest{}
	mi := &file_ride_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDriverRequest) ProtoMessage() {}

func (x *AssignDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDriverRequest.ProtoReflect.Descriptor instead.
func (*AssignDriverRequest) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{4}
}

func (x *AssignDriverRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type AssignDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignDriverResponse) Reset() {
	*x = AssignDriverResponse{}
	mi := &file_ride_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDriverResponse) ProtoMessage() {}

func (x *AssignDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDriverResponse.ProtoReflect.Descriptor instead.
func (*AssignDriverResponse) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{5}
}

func (x *AssignDriverResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *AssignDriverResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RideStatusUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	NewStatus     string                 `protobuf:"bytes,2,opt,name=new_status,json=newStatus,proto3" json:"new_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideStatusUpdateRequest) Reset() {
	*x = RideStatusUpdateRequest{}
	mi := &file_ride_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideStatusUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusUpdateRequest) ProtoMessage() {}

func (x *RideStatusUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusUpdateRequest.ProtoReflect.Descriptor instead.
func (*RideStatusUpdateRequest) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{6}
}

func (x *RideStatusUpdateRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *RideStatusUpdateRequest) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

type RideStatusUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideStatusUpdateResponse) Reset() {
	*x = RideStatusUpdateResponse{}
	mi := &file_ride_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideStatusUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusUpdateResponse) ProtoMessage() {}

func (x *RideStatusUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusUpdateResponse.ProtoReflect.Descriptor instead.
func (*RideStatusUpdateResponse) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{7}
}

func (x *RideStatusUpdateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CompleteRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteRideRequest) Reset() {
	*x = CompleteRideRequest{}
	mi := &file_ride_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRideRequest) ProtoMessage() {}

func (x *CompleteRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRideRequest.ProtoReflect.Descriptor instead.
func (*CompleteRideRequest) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{8}
}

func (x *CompleteRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type CompleteRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteRideResponse) Reset() {
	*x = CompleteRideResponse{}
	mi := &file_ride_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRideResponse) ProtoMessage() {}

func (x *CompleteRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ride_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRideResponse.ProtoReflect.Descriptor instead.
func (*CompleteRideResponse) Descriptor() ([]byte, []int) {
	return file_ride_proto_rawDescGZIP(), []int{9}
}

func (x *CompleteRideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_ride_proto protoreflect.FileDescriptor

var file_ride_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x69,
	0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x72, 0x6f, 0x70, 0x6f, 0x66, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x45, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x51, 0x0a, 0x17, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x32, 0x0a, 0x18, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xf3, 0x02, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x69, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x69,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x52, 0x69,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x52, 0x69, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02,
	0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_ride_proto_rawDescOnce sync.Once
	file_ride_proto_rawDescData []byte
)

func file_ride_proto_rawDescGZIP() []byte {
	file_ride_proto_rawDescOnce.Do(func() {
		file_ride_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ride_proto_rawDesc), len(file_ride_proto_rawDesc)))
	})
	return file_ride_proto_rawDescData
}

var file_ride_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ride_proto_goTypes = []any{
	(*CreateRideRequest)(nil),        // 0: ride.CreateRideRequest
	(*CreateRideResponse)(nil),       // 1: ride.CreateRideResponse
	(*RideStatusRequest)(nil),        // 2: ride.RideStatusRequest
	(*RideStatusResponse)(nil),       // 3: ride.RideStatusResponse
	(*AssignDriverRequest)(nil),      // 4: ride.AssignDriverRequest
	(*AssignDriverResponse)(nil),     // 5: ride.AssignDriverResponse
	(*RideStatusUpdateRequest)(nil),  // 6: ride.RideStatusUpdateRequest
	(*RideStatusUpdateResponse)(nil), // 7: ride.RideStatusUpdateResponse
	(*CompleteRideRequest)(nil),      // 8: ride.CompleteRideRequest
	(*CompleteRideResponse)(nil),     // 9: ride.CompleteRideResponse
}
var file_ride_proto_depIdxs = []int32{
	0, // 0: ride.RideService.CreateRide:input_type -> ride.CreateRideRequest
	2, // 1: ride.RideService.GetRideStatus:input_type -> ride.RideStatusRequest
	4, // 2: ride.RideService.AssignDriver:input_type -> ride.AssignDriverRequest
	6, // 3: ride.RideService.UpdateRideStatus:input_type -> ride.RideStatusUpdateRequest
	8, // 4: ride.RideService.CompleteRide:input_type -> ride.CompleteRideRequest
	1, // 5: ride.RideService.CreateRide:output_type -> ride.CreateRideResponse
	3, // 6: ride.RideService.GetRideStatus:output_type -> ride.RideStatusResponse
	5, // 7: ride.RideService.AssignDriver:output_type -> ride.AssignDriverResponse
	7, // 8: ride.RideService.UpdateRideStatus:output_type -> ride.RideStatusUpdateResponse
	9, // 9: ride.RideService.CompleteRide:output_type -> ride.CompleteRideResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ride_proto_init() }
func file_ride_proto_init() {
	if File_ride_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ride_proto_rawDesc), len(file_ride_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ride_proto_goTypes,
		DependencyIndexes: file_ride_proto_depIdxs,
		MessageInfos:      file_ride_proto_msgTypes,
	}.Build()
	File_ride_proto = out.File
	file_ride_proto_goTypes = nil
	file_ride_proto_depIdxs = nil
}
